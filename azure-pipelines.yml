trigger:
  - develop
  - main

pr:
  branches:
    exclude:
      - '*'

resources:
  - repo: self

variables:
  dockerRegistryServiceConnection: 'blindnet-acr'
  subscriptionServiceConnection: 'blindnet-dac-arm'
  imageRepository: 'storageconnjavademo'
  containerRegistry: 'blindnet.azurecr.io'
  dockerfilePath: 'example/Dockerfile'
  branch: ${{ variables['Build.SourceBranchName'] }}
  tag: '$(Build.BuildId)'
  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    slot: 'production'
  ${{ elseif eq(variables['Build.SourceBranchName'], 'develop') }}:
    slot: 'staging'

pool:
  vmImage: 'ubuntu-22.04'

steps:
  - script: |
      sudo apt-get update
      sudo apt-get install -y maven
    displayName: Install Maven
  - task: JavaToolInstaller@0
    displayName: Set Java version
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
  - script: mvn package
    displayName: Build & Package
  - task: Docker@2
    displayName: Build Docker image
    inputs:
      command: build
      repository: $(imageRepository)
      dockerfile: $(dockerfilePath)
      containerRegistry: $(dockerRegistryServiceConnection)
      tags: |
        $(tag)
        $(branch)
  - task: Docker@2
    displayName: Push Docker Image
    inputs:
      command: push
      repository: $(imageRepository)
      containerRegistry: $(dockerRegistryServiceConnection)
      tags: |
        $(tag)
        $(branch)
  - task: AzureWebAppContainer@1
    displayName: Deploy
    inputs:
      azureSubscription: $(subscriptionServiceConnection)
      appName: 'blindnet-connector-demo'
      imageName: $(containerRegistry)/$(imageRepository):$(tag)
      resourceGroupName: 'data-access-component'
      deployToSlotOrASE: true
      slotName: $(slot)
